name: Rollback Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to rollback'
        required: true
        type: choice
        options:
          - staging
          - production
      version:
        description: 'Version to rollback to (e.g., v123)'
        required: true
        type: string
      reason:
        description: 'Reason for rollback'
        required: true
        type: string

jobs:
  rollback:
    name: Rollback ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
      - name: Check permissions
        run: |
          echo "🔐 Checking permissions for ${{ github.actor }}"
          # ロールバック権限の確認（GitHub環境保護ルールで管理）

      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.version }}

      - name: Validate version
        run: |
          if ! git rev-parse ${{ github.event.inputs.version }} >/dev/null 2>&1; then
            echo "❌ Version ${{ github.event.inputs.version }} not found"
            exit 1
          fi
          echo "✅ Version ${{ github.event.inputs.version }} found"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets[format('{0}_API_URL', github.event.inputs.environment)] }}
          NEXT_PUBLIC_FIREBASE_CONFIG: ${{ secrets[format('{0}_FIREBASE_CONFIG', github.event.inputs.environment)] }}
          NODE_ENV: production

      - name: Create rollback backup
        run: |
          ROLLBACK_TAG="rollback-$(date +%Y%m%d-%H%M%S)-from-${{ github.sha }}"
          git tag $ROLLBACK_TAG
          git push origin $ROLLBACK_TAG
          echo "ROLLBACK_TAG=$ROLLBACK_TAG" >> $GITHUB_ENV

      - name: Deploy to Vercel
        run: |
          npm install -g vercel
          DEPLOYMENT_URL=$(vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }} --yes)
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Run smoke tests
        run: |
          npm install -g wait-on
          wait-on ${{ env.DEPLOYMENT_URL }} -t 60000
          npm run test:e2e -- --grep @critical

      - name: Update DNS (if production)
        if: github.event.inputs.environment == 'production'
        run: |
          echo "🔄 Updating DNS records..."
          # DNS更新処理（Cloudflare APIなど）

      - name: Clear CDN cache
        run: |
          echo "🧹 Clearing CDN cache..."
          # CDNキャッシュクリア処理

      - name: Create rollback record
        uses: actions/github-script@v6
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Rollback: ${context.payload.inputs.environment} to ${context.payload.inputs.version}`,
              body: `## Rollback Details
              
              **Environment**: ${context.payload.inputs.environment}
              **Rolled back to**: ${context.payload.inputs.version}
              **Rolled back from**: ${context.sha}
              **Performed by**: @${context.actor}
              **Timestamp**: ${new Date().toISOString()}
              **Reason**: ${context.payload.inputs.reason}
              
              **Rollback Tag**: ${process.env.ROLLBACK_TAG}
              **Deployment URL**: ${process.env.DEPLOYMENT_URL}
              
              ### Next Steps
              - [ ] Monitor application metrics
              - [ ] Verify functionality
              - [ ] Investigate root cause
              - [ ] Plan forward fix`,
              labels: ['rollback', context.payload.inputs.environment]
            });

            console.log(`Created issue #${issue.data.number}`);

      - name: Notify team
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            🔄 Rollback ${{ job.status }}
            Environment: ${{ github.event.inputs.environment }}
            Version: ${{ github.event.inputs.version }}
            Reason: ${{ github.event.inputs.reason }}
            Performed by: ${{ github.actor }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

      - name: Monitor rollback
        run: |
          echo "📊 Starting post-rollback monitoring..."
          # モニタリングツールへの通知
          # エラー率の監視
          # パフォーマンス指標の確認
